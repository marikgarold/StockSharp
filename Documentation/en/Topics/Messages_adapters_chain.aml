<?xml version="1.0" encoding="utf-8"?>
<topic id="a90787cb-3566-4d09-835c-22a0838196fa" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>To make it easier to create your own connections, the<token>stocksharp</token> package includes a number of special adapters: </para>
   	<table>
  		<tableHeader>
    	<row>
      		<entry><para>Adapter</para></entry>
      		<entry><para>Description</para></entry>
    	</row>
  		</tableHeader>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.HeartbeatMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>
    		An adapter that monitors <codeEntityReference>T:StockSharp.Messages.ConnectMessage</codeEntityReference> and <codeEntityReference>T:StockSharp.Messages.DisconnectMessage</codeEntityReference>
    		messages when the connection is dropped and on subsequent attempts to re-establish it. 
    		Additionally, it sends a <codeEntityReference>T:StockSharp.Messages.TimeMessage</codeEntityReference> to the connection to simulate ping messages if the
    		<codeEntityReference qualifyHint="true">P:StockSharp.Messages.IMessageAdapter.HeartbeatInterval</codeEntityReference> is set.
    		   		
    		</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.Level1DepthBuilderAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>
    		An adapter that collects <codeEntityReference>T:StockSharp.Messages.QuoteChangeMessage</codeEntityReference> from 
    		<codeEntityReference>T:StockSharp.Messages.Level1ChangeMessage</codeEntityReference> 
    		message  <codeEntityReference qualifyHint="true">P:StockSharp.Messages.MarketDataMessage.BuildMode</codeEntityReference> 
    		was set when subscribing and level1 message contains best buy or sell information.

</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.Level1ExtendBuilderAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>
    		An adapter that collects  <codeEntityReference>T:StockSharp.Messages.Level1ChangeMessage</codeEntityReference> message from <codeEntityReference>T:StockSharp.Messages.QuoteChangeMessage</codeEntityReference>
    	, tick trades and candles.
    	</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.LookupTrackingMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>
    		An adapter that monitors subscriptions of the <codeEntityReference>T:StockSharp.Messages.SecurityLookupMessage</codeEntityReference> type for which the connection does not send the resulting <codeEntityReference>T:StockSharp.Messages.SubscriptionFinishedMessage</codeEntityReference> message. 
    		In this case, this adapter independently generates the resulting message after a certain timeout.
    		</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.OrderBookIncrementMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that collects a whole order book from incremental messages. See Order books (incremental and regular) for details <link xlink:href="fa060718-1aaa-43a4-9c37-4f57476f1932" />.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.OrderBookSortMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that automatically sorts buy and sell orders in the order book if is <codeEntityReference qualifyHint="true">P:StockSharp.Messages.QuoteChangeMessage.IsSorted</codeEntityReference> set to <legacyBold>false</legacyBold>.</para>
    	</entry>
  		</row>
		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.OrderBookTruncateMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that automatically cuts the order book depth if  <codeEntityReference qualifyHint="true">P:StockSharp.Messages.MarketDataMessage.MaxDepth</codeEntityReference> was set when subscribing.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.OrderLogMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that automatically creates an order book from the order log if <codeEntityReference qualifyHint="true">P:StockSharp.Messages.MarketDataMessage.BuildMode</codeEntityReference>  was set when subscribing. See for details <link xlink:href="42dcf014-53df-4962-a907-59ce2f165507" />.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.PartialDownloadMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that automatically splits a history request into multiple sub-requests at intervals. See <link xlink:href="15357338-1d0d-4a6d-ae70-8118be08ecc7" /> for details.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.SecurityMappingMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that automatically replaces instrument IDs, if they are specified in the  <codeEntityReference>T:StockSharp.Algo.Storages.ISecurityMappingStorage</codeEntityReference> storage.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.SecurityNativeIdMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that automatically replaces instrument IDs, if the adapter works with system instrument codes <codeEntityReference qualifyHint="true">P:StockSharp.Messages.IMessageAdapter.IsNativeIdentifiers</codeEntityReference>.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.SubscriptionOnlineMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that monitors subscriptions and prevents duplicate online subscriptions from being sent further into the connection. Duplicate subscriptions are saved and added to outgoing messages that inherit from <codeEntityReference>T:StockSharp.Messages.ISubscriptionIdMessage</codeEntityReference> via the <codeEntityReference qualifyHint="true">P:StockSharp.Messages.ISubscriptionIdMessage.SubscriptionIds</codeEntityReference> property..</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.SubscriptionMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>Subscription monitoring adapter. Unlike <codeEntityReference>T:StockSharp.Algo.SubscriptionOnlineMessageAdapter</codeEntityReference>, adapter redirects duplicate subscriptions further and works not only with online subscriptions, but also with history.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.TransactionOrderingMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that monitors transactional messages (orders or trades) and sorts them in case the information about the trade comes earlier than the information about the order for which the trade was completed.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.Storages.StorageMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter that monitors historical subscriptions and tries to load data from internal storage. If the required data is not available, the subscription is redirected fur</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.Storages.StorageMetaInfoMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>An adapter trying to load meta data (<codeEntityReference>T:StockSharp.Messages.SecurityMessage</codeEntityReference>, <codeEntityReference>T:StockSharp.Messages.BoardMessage</codeEntityReference>, <codeEntityReference>T:StockSharp.Messages.PositionChangeMessage</codeEntityReference>) from internal storage.</para>
    	</entry>
  		</row>
  		<row>
    	<entry>
    	<para><codeEntityReference>T:StockSharp.Algo.Candles.Compression.CandleBuilderMessageAdapter</codeEntityReference></para>
   		</entry>
    	<entry>
    		<para>Adapter gluing, building (from ticks or other available data) and loading candles.</para>
    	</entry>
  		</row>
  	</table>
    </introduction>
  </developerConceptualDocument>
</topic>