<?xml version="1.0" encoding="utf-8"?>
<topic id="42dcf014-53df-4962-a907-59ce2f165507" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>If connection supports the request log, then the adapter can transmit it via the <codeEntityReference>T:StockSharp.Messages.ExecutionMessage</codeEntityReference> message:</para>
       	<code language="C#"><![CDATA[
			SendOutMessage(new ExecutionMessage
			{
				ExecutionType = ExecutionTypes.OrderLog, // <- setting the flag that the message contains olive OL
				ServerTime = order.TradeTime,
				SecurityId = order.Symbol.ToStockSharp(section),
				Side = order.Side.ToSide(),
				OrderPrice = (decimal)order.Price,
				OrderType = order.Type.ToOrderType(out var postOnly, out _),
				OrderState = order.Status.ToOrderState(),
				OrderVolume = order.Quantity,
				Balance = (decimal?)(order.Quantity - order.AccumFilled),
				TimeInForce = order.Tif.ToTimeInForce(out var postOnly2),
				AveragePrice = (decimal?)order.AveragePrice,
			});
]]></code>
		<para>
		If support for order book generation from incoming data is required, then the 
		<codeEntityReference>T:StockSharp.Algo.OrderLogMessageAdapter</codeEntityReference>
		adapter (see <link xlink:href="a90787cb-3566-4d09-835c-22a0838196fa" /> for details) will be used for subscriptions that require order book collection from order log data. 
		By default, the <codeEntityReference>T:StockSharp.Messages.OrderLogMarketDepthBuilder</codeEntityReference> algorithm will be used. 
		If this class behavior is not enough, then you need to create your own class that implements the 
		<codeEntityReference>T:StockSharp.Messages.IOrderLogMarketDepthBuilder</codeEntityReference>
		interface and override the
		<codeEntityReference qualifyHint="true">M:StockSharp.Messages.IMessageAdapter.CreateOrderLogMarketDepthBuilder(StockSharp.Messages.SecurityId)</codeEntityReference>:
		method:
		 
 </para>
		<code language="C#"><![CDATA[
public partial class MyOwnMessageAdapter : MessageAdapter
{
	// ...
	
	/// <inheritdoc />
	public IOrderLogMarketDepthBuilder CreateOrderLogMarketDepthBuilder(SecurityId securityId) => new MyOwnOrderLogMarketDepthBuilder();
}
]]></code>
    </introduction>
  </developerConceptualDocument>
</topic>