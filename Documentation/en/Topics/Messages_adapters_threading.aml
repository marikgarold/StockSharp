<?xml version="1.0" encoding="utf-8"?>
<topic id="7b2d048a-1be5-4754-9da5-1fa78f30f970" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
      For the adapters you create, it is guaranteed that all messages arriving in the overridden <codeEntityReference qualifyHint="true">M:StockSharp.Messages.MessageAdapter.OnSendInMessage(StockSharp.Messages.Message)</codeEntityReference>
      method arrive in the same thread. Therefore, no additional synchronization is required if shared data is used only for incoming messages.

      </para>
      <para>
      Outgoing messages are sent via <codeEntityReference qualifyHint="true">M:StockSharp.Messages.MessageAdapter.SendOutMessage(StockSharp.Messages.Message)</codeEntityReference>
      from the threads from which they are received. The <codeEntityReference>T:StockSharp.Algo.Connector</codeEntityReference> class will automatically add them to a single external message queue, and its events will also be called from the same thread.
      </para>
      <para>
      If data is used both in processing incoming and outgoing messages, then such data should be synchronized using standard <legacyBold>C#</legacyBold> features (for example, <legacyBold>lock</legacyBold>).
      
   </para>
    </introduction>
  </developerConceptualDocument>
</topic>